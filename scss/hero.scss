@import 'project-tile';

/* === HERO SECTION === */
.hero {
  position: relative;
  width: 100%;
  height: calc(100vh - var(--navbar-height));
  overflow: hidden;
  padding: 0 var(--margin);
  margin-bottom: 2.5rem;
  background: transparent;
}

/* Fallback to tablet behavior for narrow desktop widths */
@media (max-width: 1200px) {
  .hero {
    height: calc(100vw * 0.5);
  }
}

@media (max-width: 600px) {
  .hero {
    aspect-ratio: auto;
    height: calc(100vw * 0.25);
    padding: 0 var(--margin);
    margin-bottom: 1.5rem;
  }
}

.hero-content {
  position: relative;
  width: 100%;
  height: 100%;
}

.svg-container {
  position: absolute;
  background: transparent;
  transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.svg-container img {
  display: block;
  width: 100%;
  height: auto;
}

/* Responsive SVG arrangement for hero landing */
.hero .svg-container.text {
  position: absolute; /* Fix alignment issue */
  top: 8%;
  left: 0;
  width: clamp(45%, 55%, 65%);
  overflow: hidden; /* keep for wipe effect */
  z-index: 3;
}

.hero .svg-container.hand {
  top: 18%;
  left: calc(var(--margin) + 3%);
  width: clamp(7%, 9%, 11%);
}

.hero .svg-container.contact {
  bottom: 20%;
  left: calc(var(--margin) + 9%);
  width: clamp(7%, 10%, 12%);
}

.hero .svg-container.pc {
  bottom: 8%;
  right: var(--margin);
  width: clamp(25%, 35%, 45%);
}

.hero .svg-container.down {
  bottom: 4%;
  left: 50%;
  transform: translateX(-50%);
  width: clamp(2rem, 2.5vw, 3rem); /* Responsive size */
  cursor: pointer; /* Ensure it shows a pointer cursor */
  opacity: 1; /* Ensure it is visible */
  pointer-events: auto; /* Enable clickability */
  transition: opacity 0.5s ease; /* Smooth fade effect */
}

@media (max-width: 1024px) {
  .hero .svg-container.text {
    top: 10%;
    width: clamp(45%, 55%, 65%);
  }
  .hero .svg-container.hand {
    top: 20%;
    width: clamp(7%, 9%, 11%);
  }
  .hero .svg-container.contact {
    bottom: 17%;
    width: clamp(13%, 15%, 17%);
  }
  .hero .svg-container.pc {
    bottom: 0%;
    width: clamp(31%, 38%, 45%);
  }
  .hero .svg-container.down {
    opacity: 0;
    bottom: 0%;
  }
}

@media (max-width: 600px) {
  .hero .svg-container.text {
    top: 13%;
    width: clamp(95%, 95%, 95%);
  }
  .hero .svg-container.hand {
    top: 46%;
    left: calc(var(--margin) + 8%);
    width: clamp(13%, 13%, 13%);
  }
  .hero .svg-container.contact,
  .hero .svg-container.pc {
    display: none !important;
  }
}

/* === HERO SVG ANIMATIONS REMOVED === */
.hero .svg-container,
.hero .svg-container.text,
.hero .svg-container.hand,
.hero .svg-container.pc,
.hero .svg-container.down,
.hero .svg-container.contact {
  opacity: 0;
  animation: none;
  animation-name: none;
  animation-delay: 0s;
  animation-duration: 0s;
  animation-timing-function: initial;
  animation-fill-mode: none;
  animation-iteration-count: 1;
  animation-direction: normal;
}

/* Hero SVGs become visible once the 'revealed' class is added */
.hero .svg-container.revealed {
  opacity: 1;
}


/* === HERO SVG REVEAL (WIPE) ANIMATION FOR TEXT AND HAND - Z-INDEX FIX (HAND BELOW TEXT) === */
.hero .svg-container.text {
  position: relative;
  overflow: hidden;
  z-index: 3;
}
.hero .svg-container.hand {
  position: absolute;
  overflow: visible;
  z-index: 2;
}
.hero .svg-container.hand .wipe-reveal {
  z-index: 2;
}
.hero .svg-container.text .wipe-reveal {
  z-index: 3;
}

/* === HERO SVG REVEAL (WIPE) ANIMATION FOR TEXT AND HAND === */
.hero .svg-container.text,
.hero .svg-container.hand {
  overflow: hidden;
}

.hero .svg-container .wipe-reveal {
  position: absolute;
  inset: 0;
  background: #fff; /* White wipe effect */
  z-index: 2;
  transform: translateX(0);
  transition: transform 1.2s cubic-bezier(0.4, 0, 0.2, 1); /* Match duration with JS */
  pointer-events: none;
}

.hero .svg-container.revealed .wipe-reveal {
  transform: translateX(100%);
}

/* Fix hand SVG position after adding wipe reveal overlay */
.hero .svg-container.hand {
  position: absolute; /* restore absolute positioning */
  overflow: visible;  /* allow overlay to be hidden, but keep SVG positioned */
}
.hero .svg-container.hand .wipe-reveal {
  overflow: hidden;
  border-radius: inherit;
}

/* === PROJECTS SECTION === */

.projects {
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  gap: var(--gutter);
  padding: 2rem var(--margin);
}

@include project-tile-styles;

.container {
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  gap: var(--gutter);
  padding: 2.5rem var(--margin);
}

@media (max-width: 1024px) {
  .container {
    grid-template-columns: repeat(4, 1fr);
  }
}
@media (max-width: 768px) {
  .container {
    grid-template-columns: repeat(2, 1fr);
    padding: 1.5rem var(--margin);
  }
}
@media (max-width: 480px) {
  .container {
    grid-template-columns: 1fr;
    padding: 1rem var(--margin);
    gap: 1rem;
  }
}

/* Add animations for contact SVG */
@keyframes contact-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes contact-slide-fade-in {
  0% {
    opacity: 0;
    transform: translateY(40px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Ensure the contact SVG remains invisible initially */
.hero .svg-container.contact {
  opacity: 0; /* Start hidden */
}

.hero .svg-container.down {
  opacity: 0; /* Start hidden */
}


@media (max-width: 600px) {
  .hero .svg-container.contact,
  .hero .svg-container.down {
    display: none !important;
  }

  .hero .svg-container.hand {
    display: block !important;
  }
}

@media (max-width: 1024px) {
  .hero .svg-container.down {
    display: none !important;
  }
}
